{"version":3,"file":"static/js/815.7d9b6653.chunk.js","mappings":"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","sources":["webpack://react-first-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-first-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-first-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XBXuJ\",\"userPhoto\":\"ProfileInfo_userPhoto__PHwGN\"};","import React, { useEffect, useState } from \"react\";\nimport styles from \"../../Profile/ProfileInfo/ProfileInfo.module.css\";\n\nconst ProfileStatusWithHooks = (props) => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <div>\n      {!editMode && (\n        <div>\n          <span onDoubleClick={activateEditMode}>\n            {props.status || \"------\"}{\" \"}\n          </span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <input\n            onChange={onStatusChange}\n            autoFocus={true}\n            onBlur={deactivateEditMode}\n            value={status}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import React from \"react\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport userPhoto from \"../../../assets/images/avatars/vadik.jpg\";\nimport styles from \"../../Profile/ProfileInfo/ProfileInfo.module.css\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\n  if (!profile) {\n    return <Preloader />;\n  }\n  return (\n    <div>\n      <div className={styles.descriptionBlock}>\n        <h1>{profile.fullName}</h1>{\" \"}\n        <img\n          className={styles.userPhoto}\n          src={profile.photos.small != null ? profile.photos.small : userPhoto}\n          alt=\"ava\"\n        />\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__lB-pf\",\"posts\":\"MyPosts_posts__GSiZ2\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\"};","import React from \"react\";\nimport s from \"./Post.module.css\";\n\nconst Post = (props) => {\n  const buttonText = props.liked ? \"Dislike\" : \"Like\";\n\n  return (\n    <div className={s.item}>\n      <img\n        alt=\"avatar\"\n        src=\"https://sun9-63.userapi.com/c850336/v850336386/15c377/0rgFfLUly7g.jpg\"\n      />\n      {props.message}\n      <div>\n        <button onClick={props.onLike}>\n          <span>{buttonText}</span>\n        </button>{\" \"}\n        {props.likesCount}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport s from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  maxLengthCreator,\n  required,\n} from \"../../../utils/validators/validators\";\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\n\nwindow.props = [];\n\nconst MyPosts = React.memo((props) => {\n  console.log(\"Render\");\n  window.props.push(props);\n  console.log(props);\n\n  const postsElements = [...props.posts].reverse().map((p) => {\n    const handleLike = () => {\n      props.handleLike(p.id);\n    };\n\n    return (\n      <Post\n        liked={p.liked}\n        disliked={p.disliked}\n        onLike={handleLike}\n        message={p.message}\n        likesCount={p.likesCount}\n        key={p.id}\n      />\n    );\n  });\n\n  // let newPostElement = React.createRef();\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  };\n\n  return (\n    <div className={s.postsBlock}>\n      <h3>My post</h3>\n      <AddNewPostFormRedux onSubmit={onAddPost} />\n      <div className={s.posts}>{postsElements}</div>\n    </div>\n  );\n});\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          name=\"newPostText\"\n          component={Textarea}\n          validate={[required, maxLength10]}\n          placeholder={\"Post message\"}\n        />\n      </div>\n      <div>\n        <button disabled={!props.valid}>Add post</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(\n  AddNewPostForm\n);\n\nexport default MyPosts;\n","import { addPostCreator, likeCreator } from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostCreator(newPostText));\n    },\n\n    handleLike: (id) => {\n      dispatch(likeCreator(id));\n    },\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n  return (\n    <div>\n      <ProfileInfo\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Profile from \"./Profile\";\nimport {\n  getStatus,\n  getUserProfile,\n  updateStatus,\n} from \"../../redux/profile-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n      />\n    );\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth,\n});\n\nexport default compose(\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n  withRouter\n  // withAuthRedirect\n)(ProfileContainer);\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","className","styles","fullName","src","photos","small","userPhoto","alt","Preloader","buttonText","liked","s","message","onClick","onLike","likesCount","window","MyPosts","React","console","log","push","postsElements","posts","reverse","map","p","disliked","handleLike","id","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","disabled","valid","connect","state","profilePage","dispatch","addPostCreator","likeCreator","ProfileContainer","userId","this","match","params","authorizedUserId","history","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"sourceRoot":""}